version: '3.7'

services:
    minio:
        restart: always
        image: minio/minio@sha256:beb5fd646b298e0e732c186215926d5ebf8cb0d2ff573bba17b4c4b22ec90ade
        container_name: mlflow_s3
        ports:
            - "9000:9000"
            - "9001:9001"
        networks:
            - frontend
            - backend
        command: server /data --console-address ':9001' --address ':9000'
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data

    mc:
        image: minio/mc@sha256:c734ae7fd20606d4b2c0cf9ef25f22e5f4185406363b9260e7c16f6fe527cfd7
        depends_on:
            - minio
        container_name: mc
        networks:
            - backend
        env_file:
            - .env
        entrypoint: >
            /bin/sh -c "
            /tmp/wait-for-it.sh minio:9000 &&
            /usr/bin/mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
            /usr/bin/mc mb minio/mlflow;
            exit 0;
            "
        volumes:
            - ./wait-for-it.sh:/tmp/wait-for-it.sh

    db:
        restart: always
        image: mysql/mysql-server@sha256:5b40d96b11333570143d98d3a74100fefadb9abb17b27a95dbc9ad33544ec142
        container_name: mlflow_db
        ports:
            - "3306:3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql

    mlflow:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        depends_on:
            - mc
            - db
        ports:
            - "5000:5000"
        networks:
            - frontend
            - backend
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: |
            mlflow server
            --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}
            --default-artifact-root s3://mlflow/
            --host 0.0.0.0 &&
            mlflow db upgrade mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}

    nginx:
        restart: always
        build: ./nginx
        image: nginx
        container_name: nginx
        depends_on:
            - mlflow
        ports:
            - "8080:443"
            - "8888:444"
            - "8786:445"
        networks:
            - frontend
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt
            - /etc/nginx/.htpasswd:/etc/nginx/.htpasswd
        extra_hosts:
            - "localhost:127.0.0.1"

volumes:
    dbdata:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /data/TaoLin_shared/docker/volumes/minio_dbdata/_data
    minio_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /data/TaoLin_shared/docker/volumes/minio_minio_data/_data

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
