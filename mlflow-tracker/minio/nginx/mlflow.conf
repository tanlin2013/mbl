# Define the parameters for a specific virtual host/server
server {
    # Define the server name, IP address, and/or port of the server
    listen 443 ssl;
    server_name mlflow.do-doublets.phys.nthu.edu.tw;

    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;

    # Configure ssl certification
    ssl_certificate /etc/nginx/cert/chain.pem;
    ssl_certificate_key /etc/nginx/cert/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;

    # Configure NGINX to reverse proxy HTTP requests to the upstream server (uWSGI server)
    location / {
        # Define the location of the proxy server to send the request to
        proxy_pass http://mlflow:5000;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
    listen 443 ssl;
    server_name minio.do-doublets.phys.nthu.edu.tw;
    charset utf-8;

    ssl_certificate /etc/nginx/cert/chain.pem;
    ssl_certificate_key /etc/nginx/cert/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://minio:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

server {
     # Binds the TCP port 80.
     listen 80;

     # Defines the domain or subdomain name.
     server_name do-doublets.phys.nthu.edu.tw;

     # Redirect the traffic to the corresponding HTTPS server block with status code 301
     return 301 https://$host$request_uri;
}
