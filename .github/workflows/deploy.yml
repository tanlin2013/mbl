name: CI deploy

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Deploy on (workstation or cluster)'
        required: true
        default: 'workstation'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Echo target
        run: echo "Deploying to targeted machine - ${{ github.event.inputs.target }}"

      - name: Deploy built docker image to workstation
        if: github.event.inputs.target == 'workstation'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.WORKSTATION_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            nohup \
            docker run --entrypoint python --rm --pull=always \
            -v ~/data:/home/mbl/data \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            tanlin2013/mbl scripts/sampler.py \
            > foo.out 2> foo.err < /dev/null &

      - name: Rsync repo to cluster
        if: github.event.inputs.target == 'cluster'
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avzr --delete
          remote_path: '~/projects/mbl'
          remote_host: ${{ secrets.CLUSTER_HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_key: ${{ secrets.KEY }}

      - name: Build singularity and run sampler
        if: github.event.inputs.target == 'cluster'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CLUSTER_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd projects/mbl &&
            singularity build --fakeroot mbl.sif singularity.def &&
            conda activate &&
            nohup python scripts/sampler.py > foo.out 2> foo.err < /dev/null &
#            singularity exec -B /etc/slurm,/etc/passwd,/run/munge,/usr/lib64,/usr/bin/squeue,/usr/bin/sbatch,/usr/bin/scancel --bind ~/data:/data mbl.sif python scripts/sampler.py
